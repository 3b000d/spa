@mixin pseudo($display: block, $pos: absolute, $content: '') {
   content: $content;
   display: $display;
   position: $pos;
}
@mixin font-family ($value,$important:false) {
   @if($value=='ar') {
      font-family: 'Droid Arabic Kufi' short-if($important, !important);
   }
   @elseif($value=='button') {
      font-family: 'Cairo' short-if($important, !important);
   }
   @elseif($value=='number') {
      font-family: 'Open Sans Condensed' short-if($important, !important);
   }
   @elseif($value=='en') {
      font-family: 'Poppins' short-if($important, !important);
   } @else {
      @warn 'Error #{$value} dose not mathcing';
   }
}
@mixin truncate-Text($overflow: ellipsis,$important:false) {
   overflow: hidden short-if($important,!important);
   white-space: nowrap short-if($important,!important);
   text-overflow: $overflow short-if($important,!important);
}
@mixin responsive-ratio($x,$y, $pseudo: false) {
   $padding: unquote(($y / $x) * 100 + '%');
   @if $pseudo {
      &:before {
         @include pseudo($pos: relative);
         width: 100%;
         padding-top: $padding;
      }
   } @else {
      padding-top: $padding;
   }
}
// @mixin center($position) {
//    position: absolute;
//
//    @if $position == 'vertical' {
//       top: 50%;
//       transform: translateY(-50%);
//    }
//
//    @elseif $position == 'horizontal' {
//       left: 50%;
//       transform: translate(-50%);
//    }
//
//    @elseif $position == 'both' {
//       top: 50%;
//       left: 50%;
//       transform: translate(-50%, -50%);
//    }
// }
@mixin center($class,$important:false) {
   @if($class) {
      .center {
         top: 50% short-if($important, !important);
         left: 50% short-if($important, !important);
         position: absolute short-if($important, !important);
         transform: translate(-50%,-50%) short-if($important, !important);
      }
   } @else {
      top: 50% short-if($important, !important);
      left: 50% short-if($important, !important);
      transform: translate(-50%,-50%) short-if($important, !important);
   }
}
@mixin border-radius($radius,$important:false) {
   border-radius: $radius short-if($important,!important);
   -moz-border-radius: $radius short-if($important,!important);
   background-clip: padding-box short-if($important,!important);
   -webkit-border-radius: $radius short-if($important,!important);
}
@mixin box-shadow($left, $top,$radius ,$spread , $color,$important:false) {
   box-shadow: $left $top $radius $spread $color short-if($important,!important);
   -moz-box-shadow: $left $top $radius $spread $color short-if($important,!important);
   -webkit-box-shadow: $left $top $radius $spread $color short-if($important,!important);
}
@mixin appearance($appearance,$important:false) {
   appearance: $appearance short-if($important,!important);
   -moz-appearance: $appearance short-if($important,!important);
   -webkit-appearance: $appearance short-if($important,!important);
}
